version: "3"

vars:
    KUBE_DIR: "{{.TASKFILE_DIR}}/.kube" # Directory for kubeconfig
    KUBECONFIG: "{{.KUBE_DIR}}/sublimeapp-kubeconfig.yaml" # Path to kubeconfig

env:
    KUBECONFIG: "{{.KUBECONFIG}}"


tasks:
    create-cluster:
        desc: Create k3d cluster and generate kubeconfig
        cmds:
            - k3d cluster create sublimeapp --servers 1 --agents 1 --port 8080:80@loadbalancer
            - powershell -Command "New-Item -Path '{{.KUBE_DIR}}' -ItemType Directory -Force"
            # - k3d kubeconfig get sublimeapp > ~/.kube/config
            - k3d kubeconfig get sublimeapp > sublimeapp-kubeconfig.yaml
        silent: false

    setup-prometheus:
        desc: Setup namespace and all yamls
        cmds: 
            - kubectl create namespace monitoring
            - kubectl apply -f ./kubernetes/Prometheus
            # - kubectl create  -f clusterRole.yaml
            # - kubectl create  -f config-map.yaml
            # - kubectl create  -f prometheus-deployment.yaml
            # - kubectl create  -f prometheus-service.yaml --namespace=monitoring
    
    setup-kube-metrics:
        desc: Setup kube-state-metrics
        cmds:
            - kubectl apply -f ./kubernetes/Kube-state-metrics
            - kubectl get deployments kube-state-metrics -n kube-system
    
    setup-grafana:
            desc: Setup Grafana
            cmds:
                - kubectl apply -f ./kubernetes/Grafana

    run-monitoring:
        desc: Running Prometheus and Grafana
        cmds: 
            - kubectl port-forward grafana-569f9945cd-rwgrr 3000:3000 -n monitoring

    update-gitignore:
        desc: Add kubeconfig to .gitignore
        cmds:
            - powershell -Command "If (!(Select-String -Path '.gitignore' -Pattern 'sublimeapp-kubeconfig.yaml' -ErrorAction SilentlyContinue)) { Add-Content '.gitignore' 'sublimeapp-kubeconfig.yaml' }"
            - echo "Checked and updated .gitignore for sublimeapp-kubeconfig.yaml"
        silent: false

    apply-yamls:
        desc: Apply all yaml files
        cmds:
            - kubectl apply -f ./kubernetes/Services
        silent: false

    port-forward:
        desc: (Not necessary) Port-forward traefik service from Kubernetes to local machine
        cmds:
            # - kubectl port-forward svc/traefik -n kube-system 8080:80
            - kubectl port-forward service/gateway-service -n default 8080:80
        silent: false

    delete-cluster:
        desc: Delete the k3d cluster
        cmds:
            - k3d cluster delete sublimeapp
        silent: false

    test-cluster:
        desc: Test if the k3d cluster is correctly set up
        cmds:
            - kubectl get nodes
        silent: false
        
    get-endpoints:
        desc: Get the endpoints
        cmds:
            - kubectl get endpoints

        silent: false

    get-namespace:
        desc: Get the endpoints
        cmds:
            - kubectl get namespace
        silent: false
